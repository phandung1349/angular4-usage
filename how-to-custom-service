#app.component.html

<h1>{{ip | json}}</h1>

#app.component.ts

import { Component } from '@angular/core';
import { IpService } from "./ipservice.service";

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css'],
  providers: [IpService]
})
export class AppComponent {
  ip;
  constructor(private ipService : IpService){
    this.ipService.getIp()
    .then(ip => this.ip = ip);
  }
}

#ipservice.service.ts

import { Injectable } from '@angular/core';
import { Http } from '@angular/http';
import 'rxjs/add/operator/toPromise';

@Injectable()

export class IpService {
  constructor(private http : Http) {}
  getIp() {
    return this.http.get('http://ip.jsontest.com/')
    .toPromise()
    .then(res => res.json())
    .then(resjson => resjson.ip);
  }
}


note:

(built-in service)
1. when use a built-in service, we need:
  import in app.component.ts, aslo import in file that uses built-in service, aslo constructor
  
(custom service)
2. when use a custom service, we need:
  + import in file that uses custom service: import { IpService } from "./ipservice.service";
  + providers: [IpService] (in @Component({}))
  + constructor: constructor(private ipService : IpService)

(write a custom service)
3. see above
